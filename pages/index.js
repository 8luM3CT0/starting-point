//front-end
import Head from 'next/head'
import Image from 'next/image'
import Header from '../components/header/Header'
import Banner from '../components/header/banner/Banner'
import NewsFeed from '../components/feed/NewsFeed'
//back-end
import sports_news from '../utils/sports_news'
import sports_scores from '../utils/sports_scores'
import sports_standings from '../utils/sports_standings'
import { auth, store, provider } from '../firebase'
import { useState } from 'react'
import { useAuthState } from 'react-firebase-hooks/auth'

export default function Home ({
  results,
  nfl_results,
  nhl_results,
  nba_results,
  nba_team_standings
}) {
  console.log(results, nba_results, nba_team_standings)

  return (
    <div className='scrollbar-hide'>
      <Head>
        <title>StartUp - Blog</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <Header results={results} />
      <main
        className='
          justify-center
          mx-auto
          max-w-[1680px]
          bg-gray-100
          h-screen
      '
      >
        <img
          loading='lazy'
          src='https://sportshub.cbsistatic.com/i/r/2021/11/22/48b18d6f-e29e-47b5-8413-7f9c8e5b3b87/thumbnail/770x433/a44d48afc6d8927d12cb56d13ba622ad/curry-mvp.jpg'
          alt=''
          className='
              w-[720] 
              md:w-full 
              h-[270px]
              sm:h-[400px] 
              lg:h-[620px] 
              opacity-75'
        />
        <NewsFeed
          nba_results={nba_results}
          nba_team_standings={nba_team_standings}
        />
      </main>
    </div>
  )
}

export async function getServerSideProps (context) {
  const genre = context.query.title

  const request = await fetch(
    `https://api.sportsdata.io/v3/${sports_scores.fetchNBAScores.url}`
  ).then(res => res.json())

  const nfl_request = await fetch(
    `https://api.sportsdata.io/v3/${sports_news[genre]?.url ||
      sports_news.fetchNFLNews.url}`
  ).then(res => res.json())

  const nhl_request = await fetch(
    `https://api.sportsdata.io/v3/${sports_news[genre]?.url ||
      sports_news.fetchNHLNews.url}`
  ).then(res => res.json())

  const nba_request = await fetch(
    `https://api.sportsdata.io/v3/${sports_news[genre]?.url ||
      sports_news.fetchNBANews.url}`
  ).then(res => res.json())

  const nba_standing_req = await fetch(
    `https://api.sportsdata.io/v3/${sports_standings.fetchNBAStandings.url}`
  ).then(res => res.json())

  return {
    props: {
      results: request,
      nfl_results: nfl_request,
      nhl_results: nhl_request,
      nba_results: nba_request,
      nba_team_standings: nba_standing_req
    }
  }
}
